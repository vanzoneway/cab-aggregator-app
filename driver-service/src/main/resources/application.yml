spring:
  application:
    name: driver-service
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${JWT_ISSUER_URL:http://localhost:8090/realms/cab-aggregator-app}

  cache:
    type: redis
    redis:
      time-to-live: ${REDIS_CACHE_TTL:60m}
      cache-null-values: false
  data:
    redis:
      host: ${REDIS_CACHE_URL:localhost}
      port: ${REDIS_CACHE_PORT:6380}

  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${DB_URL:jdbc:postgresql://localhost:5434/drivers}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}

  liquibase:
    change-log: db/changelog/main-changelog.xml

  kafka:
    consumer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:29092, localhost:29093, localhost:29094}
      client-id: "driver-average-rating-consumer"
      auto-offset-reset: earliest

management:
  endpoints:
    web:
      exposure:
        include: health, prometheus
  prometheus:
    metrics:
      export:
        enabled: true
  zipkin:
    tracing:
      endpoint: ${TEMPO_ZIPKIN_URL:http://localhost:9411/api/v2/spans}
  tracing:
    sampling:
      probability: 1.0
  metrics:
    tags:
      application: driver-service

server:
  port: 8085

eureka:
  instance:
    metadataMap:
      "prometheus.scrape": "true"
      "prometheus.path": "/actuator/prometheus"
      "prometheus.port": "8085"
  client:
    service-url:
      defaultZone:
        ${EUREKA_SERVER_URL:http://localhost:8761/eureka/}

minio:
  url: ${MINIO_URL:http://localhost:9000}
  access:
    name: ${MINIO_ACCESS_NAME:minio}
    secret: ${MINIO_ACCESS_SECRET:miniosecret}
  bucket:
    name: ${DRIVER_SERVICE_MINIO_BUCKET:driver-avatars}