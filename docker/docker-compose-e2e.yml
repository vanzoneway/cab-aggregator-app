version: '3.8'

services:

  redis-cache-e2e:
    image: redis:7.4.2
    container_name: redis-cache-e2e
    ports:
      - "6380:6379"
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
    networks:
      - cab-app-network-e2e
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  passengers-db-e2e:
    image: postgres:latest
    container_name: passengers-db-e2e
    environment:
      POSTGRES_DB: passengers
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    networks:
      - cab-app-network-e2e
    healthcheck:
      test: pg_isready -U postgres
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  drivers-db-e2e:
    image: postgres:latest
    container_name: drivers-db-e2e
    environment:
      POSTGRES_DB: drivers
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5434:5432"
    networks:
      - cab-app-network-e2e
    healthcheck:
      test: pg_isready -U postgres
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  rides-db-e2e:
    image: postgres:latest
    container_name: rides-db-e2e
    environment:
      POSTGRES_DB: rides
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5435:5432"
    networks:
      - cab-app-network-e2e
    healthcheck:
      test: pg_isready -U postgres
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  rating-db-e2e:
    image: postgres:latest
    container_name: rating-db-e2e
    environment:
      POSTGRES_DB: ratings
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5436:5432"
    networks:
      - cab-app-network-e2e
    healthcheck:
      test: pg_isready -U postgres
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  zookeeper-e2e:
    image: bitnami/zookeeper:3.5
    container_name: zookeeper-e2e
    ports:
      - "2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - cab-app-network-e2e
    healthcheck:
      test: nc -z localhost 2181 || exit -1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  kafka-0-e2e:
    image: bitnami/kafka:2.8.1
    container_name: kafka-0-e2e
    expose:
      - 9092
    ports:
      - "29092:29092"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-e2e:2181
      - KAFKA_CFG_BROKER_ID=0
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,EXTERNAL://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka-0-e2e:9092,EXTERNAL://localhost:29092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
    depends_on:
      zookeeper-e2e:
        condition: service_healthy
    networks:
      - cab-app-network-e2e
    healthcheck:
      test: kafka-topics.sh --list --bootstrap-server localhost:9092 || exit 1
      interval: 1s
      timeout: 60s
      retries: 60
      start_period: 5s

  kafka-1-e2e:
    image: bitnami/kafka:2.8.1
    container_name: kafka-1-e2e
    expose:
      - 9092
    ports:
      - "29093:29093"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-e2e:2181
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,EXTERNAL://:29093
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka-1-e2e:9092,EXTERNAL://localhost:29093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
    depends_on:
      zookeeper-e2e:
        condition: service_healthy
    networks:
      - cab-app-network-e2e
    healthcheck:
      test: kafka-topics.sh --list --bootstrap-server localhost:9092 || exit 1
      interval: 1s
      timeout: 60s
      retries: 60
      start_period: 5s

  kafka-2-e2e:
    image: bitnami/kafka:2.8.1
    container_name: kafka-2-e2e
    expose:
      - 9092
    ports:
      - "29094:29094"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-e2e:2181
      - KAFKA_CFG_BROKER_ID=2
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,EXTERNAL://:29094
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka-2-e2e:9092,EXTERNAL://localhost:29094
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
    depends_on:
      zookeeper-e2e:
        condition: service_healthy
    networks:
      - cab-app-network-e2e
    healthcheck:
      test: kafka-topics.sh --list --bootstrap-server localhost:9092 || exit 1
      interval: 1s
      timeout: 60s
      retries: 60
      start_period: 5s

  loki:
    image: grafana/loki:2.9.2
    container_name: loki-e2e
    volumes:
      - ./loki:/etc/loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/loki-config.yml
    networks:
      - cab-app-network-e2e

  grafana:
    image: grafana/grafana:latest
    container_name: grafana-e2e
    volumes:
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/config.ini:/etc/grafana/config.ini
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    networks:
      - cab-app-network-e2e

  victoria-metrics:
    image: victoriametrics/victoria-metrics:latest
    container_name: victoria-metrics-e2e
    ports:
      - "8428:8428"
    volumes:
      - ./victoria-metrics/promscrape.yml:/victoria-metrics/promscrape.yml
    networks:
      - cab-app-network-e2e
    command:
      - '--promscrape.config=/victoria-metrics/promscrape.yml'
      - '--promscrape.config.strictParse=false'

  tempo:
    container_name: tempo-e2e
    image: grafana/tempo:2.6.0
    command: [ "-config.file=/etc/tempo.yml" ]
    volumes:
      - ./tempo/tempo.yml:/etc/tempo.yml
    ports:
      - "14268:14268" # jaeger ingest
      - "3200:3200" # tempo
      - "55680:55680" # otlp grpc
      - "55681:55681" # otlp http
      - "9411:9411" # zipkin
      - "4318:4318" # new http
      - "4317:4317" # new grpc
    networks:
      - cab-app-network-e2e

  keycloak-e2e:
    image: bitnami/keycloak
    container_name: keycloak-e2e
    ports:
      - "8090:8090"
      - "8443:8443"
    environment:
      KEYCLOAK_HTTPS_PORT: 8443
      KEYCLOAK_HTTP_PORT: 8090
      KEYCLOAK_ADMIN_USER: ${KEYCLOAK_ADMIN_USER}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KEYCLOAK_DATABASE_HOST: keycloak-db-e2e
      KEYCLOAK_DATABASE_PORT: 5432
      KEYCLOAK_DATABASE_NAME: ${KEYCLOAK_DATABASE_NAME}
      KEYCLOAK_DATABASE_USER: ${KEYCLOAK_DATABASE_USER}
      KEYCLOAK_DATABASE_PASSWORD: ${KEYCLOAK_DATABASE_PASSWORD}
      KEYCLOAK_EXTRA_ARGS: --import-realm --verbose --health-enabled=true
    volumes:
      - ./keycloak/realms:/opt/bitnami/keycloak/data/import
    networks:
      - cab-app-network-e2e
    healthcheck:
      test: curl -f http://localhost:9000/health/live
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      keycloak-db-e2e:
        condition: service_healthy

  keycloak-db-e2e:
    image: postgres:latest
    container_name: keycloak-db-e2e
    environment:
      POSTGRES_DB: ${KEYCLOAK_DATABASE_NAME}
      POSTGRES_USER: ${KEYCLOAK_DATABASE_USER}
      POSTGRES_PASSWORD: ${KEYCLOAK_DATABASE_PASSWORD}
    ports:
      - "5440:5432"
    networks:
      - cab-app-network-e2e
    healthcheck:
      test: pg_isready -U postgres
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  minio-e2e:
    image: docker.io/bitnami/minio:2022
    container_name: minio-avatars-e2e
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - cab-app-network-e2e
    environment:
      - MINIO_DEFAULT_BUCKETS=${MINIO_DEFAULT_BUCKETS}

networks:
  cab-app-network-e2e:
    name: cab-app-network
    driver: bridge
